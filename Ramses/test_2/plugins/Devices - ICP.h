/// do not modify this file! ///
/*used uplugins start
ICPDAS_USBIO
USBDEV_LIB
PACSDK
Uart
DCON_PC
used uplugins end*/

#include <ValueTypes/value.h>
using namespace FlexitekMath::ValueTypes;

extern "C" {

fxValue __declspec(dllexport) plugin_icp_loaded();
fxValue __declspec(dllexport) icpusb_last_error(const fxValue& returnType);
// SYSTEM
fxValue __declspec(dllexport) icpusb_listdevice();
fxValue __declspec(dllexport) icpusb_opendevice(const fxValue& vwUSBIO_DID, const fxValue& vbyUSBIO_BID);
fxValue __declspec(dllexport) icpusb_closedevice(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_syncdevice(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_setcommtimeout(const fxValue& vpInstance, const fxValue& vi_dwCommTimeout);
fxValue __declspec(dllexport) icpusb_getcommtimeout(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_setautoresetwdt(const fxValue& vpInstance, const fxValue& vi_bEnable);
// DEVICE (Get)
fxValue __declspec(dllexport) icpusb_refreshdeviceinfo(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getsoftwdttimeout(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getdeviceid(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getfwver(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getdevicenickname(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getdevicesn(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getsupportiomask(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getditotal(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getdototal(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getaitotal(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getaototal(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getpitotal(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_getpototal(const fxValue& vpInstance);
// DEVICE (Set)
fxValue __declspec(dllexport) icpusb_setuserdefinedboardid(const fxValue& vpInstance, const fxValue& vi_byBID);
fxValue __declspec(dllexport) icpusb_setdevicenickname(const fxValue& vpInstance, const fxValue& vi_byDeviceNickName);
fxValue __declspec(dllexport) icpusb_setsoftwdttimeout(const fxValue& vpInstance, const fxValue& vi_dwSoftWDTTimeout);
fxValue __declspec(dllexport) icpusb_loaddefault(const fxValue& vpInstance);
// CALLBACK REGISTRATION
// Get DO configuration and data
fxValue __declspec(dllexport) icpusb_do_getpoweronenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_do_getsafetyenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_do_getsafetyvalue(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_do_getdigitaloutputinverse(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_do_readvalue(const fxValue& vpInstance);
// Set DO configuration and data
fxValue __declspec(dllexport) icpusb_do_setpoweronenable(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_byPowerOnEnable);
fxValue __declspec(dllexport) icpusb_do_setpoweronenables(const fxValue& vpInstance, const fxValue& vi_byPowerOnEnables);
fxValue __declspec(dllexport) icpusb_do_setsafetyenable(const fxValue& vpInstance, const fxValue& vi_bySafetyEnable);
fxValue __declspec(dllexport) icpusb_do_setsafetyvalue(const fxValue& vpInstance, const fxValue& vi_bySafetyValue);
fxValue __declspec(dllexport) icpusb_do_setdigitaloutputinverse(const fxValue& vpInstance, const fxValue& vi_dwInverse);
fxValue __declspec(dllexport) icpusb_do_writevalue(const fxValue& vpInstance, const fxValue& vi_byDOValue);
fxValue __declspec(dllexport) icpusb_do_writechannelvalue(const fxValue& vpInstance, const fxValue& vi_byChannel, const fxValue& vi_byValue);
// Get DI configuration and data
fxValue __declspec(dllexport) icpusb_di_getdigitalfilterwidth(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_di_getdigitalvalueinverse(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_di_getcntedgetrigger(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_di_readvalue(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_di_readchannelvalue(const fxValue& vpInstance, const fxValue& channel);
fxValue __declspec(dllexport) icpusb_di_readcountervalue(const fxValue& vpInstance);
// Set DI configuration and data
fxValue __declspec(dllexport) icpusb_di_setdigitalfilterwidth(const fxValue& vpInstance, const fxValue& vi_wFilterWidth);
fxValue __declspec(dllexport) icpusb_di_setdigitalvalueinverse(const fxValue& vpInstance, const fxValue& vi_dwInverse);
fxValue __declspec(dllexport) icpusb_di_setcntedgetrigger(const fxValue& vpInstance, const fxValue& vi_dwEdgeTrig);
fxValue __declspec(dllexport) icpusb_di_writeclearcounter(const fxValue& vpInstance, const fxValue& vi_byChToClr);
fxValue __declspec(dllexport) icpusb_di_writeclearcounters(const fxValue& vpInstance, const fxValue& vi_dwCntClrMask);
// Get AI configuration and data
fxValue __declspec(dllexport) icpusb_ai_gettotalsupporttype(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getsupporttypecode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_gettypecode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getchcjcoffset(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getchenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getfilterrejection(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getcjcoffset(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getcjcenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getwiredetectenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getresolution(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_readvaluedigital(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_readchvaluedigital(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ai_readvaluedigitalwithchsta(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_readchvaluedigitalwithchsta(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ai_readvalueanalog(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_readchvalueanalog(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ai_readvalueanalogwithchsta(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_readchvalueanalogwithchsta(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ai_readcjcvalue(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ai_getchsamplerate(const fxValue& vpInstance);
// Set AI configuration
fxValue __declspec(dllexport) icpusb_ai_settypecode(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_byTypeCode);
fxValue __declspec(dllexport) icpusb_ai_settypecodes(const fxValue& vpInstance, const fxValue& vi_byTypeCodes);
fxValue __declspec(dllexport) icpusb_ai_setchcjcoffset(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_fChCJCOffset);
fxValue __declspec(dllexport) icpusb_ai_setchcjcoffsets(const fxValue& vpInstance, const fxValue& vi_fChCJCOffsets);
fxValue __declspec(dllexport) icpusb_ai_setchenable(const fxValue& vpInstance, const fxValue& vi_byChEnable);
fxValue __declspec(dllexport) icpusb_ai_setfilterrejection(const fxValue& vpInstance, const fxValue& vi_byFilterRejection);
fxValue __declspec(dllexport) icpusb_ai_setcjcoffset(const fxValue& vpInstance, const fxValue& vi_fCJCOffset);
fxValue __declspec(dllexport) icpusb_ai_setcjcenable(const fxValue& vpInstance, const fxValue& vi_byCJCEnable);
fxValue __declspec(dllexport) icpusb_ai_setwiredetectenable(const fxValue& vpInstance, const fxValue& vi_byWireDetectEnable);
fxValue __declspec(dllexport) icpusb_ai_setchsamplerate(const fxValue& vpInstance, const fxValue& vi_dwSampleRate);
// Get AO configuration and data
fxValue __declspec(dllexport) icpusb_ao_gettotalsupporttype(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getsupporttypecode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_gettypecode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getchenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getresolution(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_readexpvaluedigital(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_readchexpvaluedigital(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ao_readexpvalueanalog(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_readchexpvalueanalog(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ao_readcurvaluedigital(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_readchcurvaluedigital(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ao_readcurvalueanalog(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_readchcurvalueanalog(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_ao_getpoweronenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getsafetyenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getpoweronvaluedigital(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getpoweronvalueanalog(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getsafetyvaluedigital(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_ao_getsafetyvalueanalog(const fxValue& vpInstance);
//fxValue __declspec(dllexport) icpusb_ao_getslewrate(const fxValue& vpInstance);
// Set AO configuration and data
fxValue __declspec(dllexport) icpusb_ao_settypecode(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_byTypeCode);
fxValue __declspec(dllexport) icpusb_ao_settypecodes(const fxValue& vpInstance, const fxValue& vi_byTypeCodes);
fxValue __declspec(dllexport) icpusb_ao_setchenable(const fxValue& vpInstance, const fxValue& vi_byChEnable);
fxValue __declspec(dllexport) icpusb_ao_writechannelvaluedigital(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_dwAOVal);
fxValue __declspec(dllexport) icpusb_ao_writevaluedigital(const fxValue& vpInstance, const fxValue& vi_dwAOValue);
fxValue __declspec(dllexport) icpusb_ao_writechannelvalueanalog(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_fAOExpValue);
fxValue __declspec(dllexport) icpusb_ao_writevalueanalog(const fxValue& vpInstance, const fxValue& vi_fAOExpValue);
fxValue __declspec(dllexport) icpusb_ao_setpoweronenable(const fxValue& vpInstance, const fxValue& vi_byPowerOnEnable);
fxValue __declspec(dllexport) icpusb_ao_setsafetyenable(const fxValue& vpInstance, const fxValue& vi_bySafetyEnable);
fxValue __declspec(dllexport) icpusb_ao_setpoweronvaluedigital(const fxValue& vpInstance, const fxValue& vi_dwPwrOnValue);
fxValue __declspec(dllexport) icpusb_ao_setpoweronchannelvaluedigital(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_dwPwrOnValue);
fxValue __declspec(dllexport) icpusb_ao_setpoweronvalueanalog(const fxValue& vpInstance, const fxValue& vi_fPwrOnValue);
fxValue __declspec(dllexport) icpusb_ao_setpoweronchannelvalueanalog(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_fPwrOnValue);
fxValue __declspec(dllexport) icpusb_ao_setsafetyvaluedigital(const fxValue& vpInstance, const fxValue& vi_dwSafetyValue);
fxValue __declspec(dllexport) icpusb_ao_setsafetychannelvaluedigital(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_dwSafetyValue);
fxValue __declspec(dllexport) icpusb_ao_setsafetyvalueanalog(const fxValue& vpInstance, const fxValue& vi_fSafetyValue);
fxValue __declspec(dllexport) icpusb_ao_setsafetychannelvalueanalog(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_fSafetyValue);
//fxValue __declspec(dllexport) icpusb_ao_setslewrate(const fxValue& vpInstance, const fxValue& vi_bySlewRate);
// Get PI configuration and data
fxValue __declspec(dllexport) icpusb_pi_gettotalsupporttype(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_getsupporttypecode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_gettypecode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_gettriggermode(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_getchisolatedflag(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_getlpfilterenable(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_getlpfilterwidth(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_readvalue(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_readchvalue(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_pi_readcntvalue(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_readchcntvalue(const fxValue& vpInstance, const fxValue& iCh);
fxValue __declspec(dllexport) icpusb_pi_readfreqvalue(const fxValue& vpInstance);
fxValue __declspec(dllexport) icpusb_pi_readchfreqvalue(const fxValue& vpInstance, const fxValue& iCh);
// Set PI configuration
fxValue __declspec(dllexport) icpusb_pi_settypecode(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_byTypeCode);
fxValue __declspec(dllexport) icpusb_pi_settypecodes(const fxValue& vpInstance, const fxValue& vi_byTypeCodes);
fxValue __declspec(dllexport) icpusb_pi_clearsinglechcount(const fxValue& vpInstance, const fxValue& vi_byChToClr);
fxValue __declspec(dllexport) icpusb_pi_clearchcount(const fxValue& vpInstance, const fxValue& vi_byClrMask);
fxValue __declspec(dllexport) icpusb_pi_clearsinglechstatus(const fxValue& vpInstance, const fxValue& vi_byChToClr);
fxValue __declspec(dllexport) icpusb_pi_clearchstatus(const fxValue& vpInstance, const fxValue& vi_byClrMask);

fxValue __declspec(dllexport) icpusb_pi_settriggermode(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_byTriggerMode);
fxValue __declspec(dllexport) icpusb_pi_settriggermodes(const fxValue& vpInstance, const fxValue& vi_byTriggerModes);
fxValue __declspec(dllexport) icpusb_pi_setchisolatedflag(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_bChIsolatedFlag);
fxValue __declspec(dllexport) icpusb_pi_setchisolatedflags(const fxValue& vpInstance, const fxValue& vi_byChIsolatedFlag);
fxValue __declspec(dllexport) icpusb_pi_setlpfilterenable(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_bLPFilterEnable);
fxValue __declspec(dllexport) icpusb_pi_setlpfilterenables(const fxValue& vpInstance, const fxValue& vi_byLPFilterEnables);
fxValue __declspec(dllexport) icpusb_pi_setlpfilterwidth(const fxValue& vpInstance, const fxValue& vi_byChToSet, const fxValue& vi_wLPFilterWidth);
fxValue __declspec(dllexport) icpusb_pi_setlpfilterwidths(const fxValue& vpInstance, const fxValue& vi_wLPFilterWidths);

// Names and descriptions
fxValue __declspec(dllexport) icpusb_ai_readchvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ai_readchvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ai_readchvaluedigitalwithchstaName();
fxValue __declspec(dllexport) icpusb_ai_readchvaluedigitalwithchstaDescription();
fxValue __declspec(dllexport) icpusb_ai_readchvalueanalogName();
fxValue __declspec(dllexport) icpusb_ai_readchvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ai_readchvalueanalogwithchstaName();
fxValue __declspec(dllexport) icpusb_ai_readchvalueanalogwithchstaDescription();
fxValue __declspec(dllexport) icpusb_ao_readchexpvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_readchexpvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_readchexpvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_readchexpvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_readchcurvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_readchcurvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_readchcurvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_readchcurvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_pi_readchvalueName();
fxValue __declspec(dllexport) icpusb_pi_readchvalueDescription();
fxValue __declspec(dllexport) icpusb_pi_readchcntvalueName();
fxValue __declspec(dllexport) icpusb_pi_readchcntvalueDescription();
fxValue __declspec(dllexport) icpusb_pi_readchfreqvalueName();
fxValue __declspec(dllexport) icpusb_pi_readchfreqvalueDescription();

fxValue __declspec(dllexport) plugin_icp_loadedName();
fxValue __declspec(dllexport) plugin_icp_loadedDescription();
fxValue __declspec(dllexport) icpusb_last_errorName();
fxValue __declspec(dllexport) icpusb_last_errorDescription();
fxValue __declspec(dllexport) icpusb_listdeviceName();
fxValue __declspec(dllexport) icpusb_listdeviceDescription();
fxValue __declspec(dllexport) icpusb_opendeviceName();
fxValue __declspec(dllexport) icpusb_opendeviceDescription();
fxValue __declspec(dllexport) icpusb_closedeviceName();
fxValue __declspec(dllexport) icpusb_closedeviceDescription();
fxValue __declspec(dllexport) icpusb_syncdeviceName();
fxValue __declspec(dllexport) icpusb_syncdeviceDescription();
fxValue __declspec(dllexport) icpusb_setcommtimeoutName();
fxValue __declspec(dllexport) icpusb_setcommtimeoutDescription();
fxValue __declspec(dllexport) icpusb_getcommtimeoutName();
fxValue __declspec(dllexport) icpusb_getcommtimeoutDescription();
fxValue __declspec(dllexport) icpusb_setautoresetwdtName();
fxValue __declspec(dllexport) icpusb_setautoresetwdtDescription();
fxValue __declspec(dllexport) icpusb_refreshdeviceinfoName();
fxValue __declspec(dllexport) icpusb_refreshdeviceinfoDescription();
fxValue __declspec(dllexport) icpusb_getsoftwdttimeoutName();
fxValue __declspec(dllexport) icpusb_getsoftwdttimeoutDescription();
fxValue __declspec(dllexport) icpusb_getdeviceidName();
fxValue __declspec(dllexport) icpusb_getdeviceidDescription();
fxValue __declspec(dllexport) icpusb_getfwverName();
fxValue __declspec(dllexport) icpusb_getfwverDescription();
fxValue __declspec(dllexport) icpusb_getdevicenicknameName();
fxValue __declspec(dllexport) icpusb_getdevicenicknameDescription();
fxValue __declspec(dllexport) icpusb_getdevicesnName();
fxValue __declspec(dllexport) icpusb_getdevicesnDescription();
fxValue __declspec(dllexport) icpusb_getsupportiomaskName();
fxValue __declspec(dllexport) icpusb_getsupportiomaskDescription();
fxValue __declspec(dllexport) icpusb_getditotalName();
fxValue __declspec(dllexport) icpusb_getditotalDescription();
fxValue __declspec(dllexport) icpusb_getdototalName();
fxValue __declspec(dllexport) icpusb_getdototalDescription();
fxValue __declspec(dllexport) icpusb_getaitotalName();
fxValue __declspec(dllexport) icpusb_getaitotalDescription();
fxValue __declspec(dllexport) icpusb_getaototalName();
fxValue __declspec(dllexport) icpusb_getaototalDescription();
fxValue __declspec(dllexport) icpusb_getpitotalName();
fxValue __declspec(dllexport) icpusb_getpitotalDescription();
fxValue __declspec(dllexport) icpusb_getpototalName();
fxValue __declspec(dllexport) icpusb_getpototalDescription();
fxValue __declspec(dllexport) icpusb_setuserdefinedboardidName();
fxValue __declspec(dllexport) icpusb_setuserdefinedboardidDescription();
fxValue __declspec(dllexport) icpusb_setdevicenicknameName();
fxValue __declspec(dllexport) icpusb_setdevicenicknameDescription();
fxValue __declspec(dllexport) icpusb_setsoftwdttimeoutName();
fxValue __declspec(dllexport) icpusb_setsoftwdttimeoutDescription();
fxValue __declspec(dllexport) icpusb_loaddefaultName();
fxValue __declspec(dllexport) icpusb_loaddefaultDescription();
fxValue __declspec(dllexport) icpusb_do_getpoweronenableName();
fxValue __declspec(dllexport) icpusb_do_getpoweronenableDescription();
fxValue __declspec(dllexport) icpusb_do_getsafetyenableName();
fxValue __declspec(dllexport) icpusb_do_getsafetyenableDescription();
fxValue __declspec(dllexport) icpusb_do_getsafetyvalueName();
fxValue __declspec(dllexport) icpusb_do_getsafetyvalueDescription();
fxValue __declspec(dllexport) icpusb_do_getdigitaloutputinverseName();
fxValue __declspec(dllexport) icpusb_do_getdigitaloutputinverseDescription();
fxValue __declspec(dllexport) icpusb_do_readvalueName();
fxValue __declspec(dllexport) icpusb_do_readvalueDescription();
fxValue __declspec(dllexport) icpusb_do_setpoweronenableName();
fxValue __declspec(dllexport) icpusb_do_setpoweronenableDescription();
fxValue __declspec(dllexport) icpusb_do_setpoweronenablesName();
fxValue __declspec(dllexport) icpusb_do_setpoweronenablesDescription();
fxValue __declspec(dllexport) icpusb_do_setsafetyenableName();
fxValue __declspec(dllexport) icpusb_do_setsafetyenableDescription();
fxValue __declspec(dllexport) icpusb_do_setsafetyvalueName();
fxValue __declspec(dllexport) icpusb_do_setsafetyvalueDescription();
fxValue __declspec(dllexport) icpusb_do_setdigitaloutputinverseName();
fxValue __declspec(dllexport) icpusb_do_setdigitaloutputinverseDescription();
fxValue __declspec(dllexport) icpusb_do_writevalueName();
fxValue __declspec(dllexport) icpusb_do_writevalueDescription();
fxValue __declspec(dllexport) icpusb_do_writechannelvalueName();
fxValue __declspec(dllexport) icpusb_do_writechannelvalueDescription();
fxValue __declspec(dllexport) icpusb_di_getdigitalfilterwidthName();
fxValue __declspec(dllexport) icpusb_di_getdigitalfilterwidthDescription();
fxValue __declspec(dllexport) icpusb_di_getdigitalvalueinverseName();
fxValue __declspec(dllexport) icpusb_di_getdigitalvalueinverseDescription();
fxValue __declspec(dllexport) icpusb_di_getcntedgetriggerName();
fxValue __declspec(dllexport) icpusb_di_getcntedgetriggerDescription();
fxValue __declspec(dllexport) icpusb_di_readvalueName();
fxValue __declspec(dllexport) icpusb_di_readvalueDescription();
fxValue __declspec(dllexport) icpusb_di_readchannelvalueName();
fxValue __declspec(dllexport) icpusb_di_readchannelvalueDescription();
fxValue __declspec(dllexport) icpusb_di_readcountervalueName();
fxValue __declspec(dllexport) icpusb_di_readcountervalueDescription();
fxValue __declspec(dllexport) icpusb_di_setdigitalfilterwidthName();
fxValue __declspec(dllexport) icpusb_di_setdigitalfilterwidthDescription();
fxValue __declspec(dllexport) icpusb_di_setdigitalvalueinverseName();
fxValue __declspec(dllexport) icpusb_di_setdigitalvalueinverseDescription();
fxValue __declspec(dllexport) icpusb_di_setcntedgetriggerName();
fxValue __declspec(dllexport) icpusb_di_setcntedgetriggerDescription();
fxValue __declspec(dllexport) icpusb_di_writeclearcounterName();
fxValue __declspec(dllexport) icpusb_di_writeclearcounterDescription();
fxValue __declspec(dllexport) icpusb_di_writeclearcountersName();
fxValue __declspec(dllexport) icpusb_di_writeclearcountersDescription();
fxValue __declspec(dllexport) icpusb_ai_gettotalsupporttypeName();
fxValue __declspec(dllexport) icpusb_ai_gettotalsupporttypeDescription();
fxValue __declspec(dllexport) icpusb_ai_getsupporttypecodeName();
fxValue __declspec(dllexport) icpusb_ai_getsupporttypecodeDescription();
fxValue __declspec(dllexport) icpusb_ai_gettypecodeName();
fxValue __declspec(dllexport) icpusb_ai_gettypecodeDescription();
fxValue __declspec(dllexport) icpusb_ai_getchcjcoffsetName();
fxValue __declspec(dllexport) icpusb_ai_getchcjcoffsetDescription();
fxValue __declspec(dllexport) icpusb_ai_getchenableName();
fxValue __declspec(dllexport) icpusb_ai_getchenableDescription();
fxValue __declspec(dllexport) icpusb_ai_getfilterrejectionName();
fxValue __declspec(dllexport) icpusb_ai_getfilterrejectionDescription();
fxValue __declspec(dllexport) icpusb_ai_getcjcoffsetName();
fxValue __declspec(dllexport) icpusb_ai_getcjcoffsetDescription();
fxValue __declspec(dllexport) icpusb_ai_getcjcenableName();
fxValue __declspec(dllexport) icpusb_ai_getcjcenableDescription();
fxValue __declspec(dllexport) icpusb_ai_getwiredetectenableName();
fxValue __declspec(dllexport) icpusb_ai_getwiredetectenableDescription();
fxValue __declspec(dllexport) icpusb_ai_getresolutionName();
fxValue __declspec(dllexport) icpusb_ai_getresolutionDescription();
fxValue __declspec(dllexport) icpusb_ai_readvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ai_readvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ai_readvaluedigitalwithchstaName();
fxValue __declspec(dllexport) icpusb_ai_readvaluedigitalwithchstaDescription();
fxValue __declspec(dllexport) icpusb_ai_readvalueanalogName();
fxValue __declspec(dllexport) icpusb_ai_readvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ai_readvalueanalogwithchstaName();
fxValue __declspec(dllexport) icpusb_ai_readvalueanalogwithchstaDescription();
fxValue __declspec(dllexport) icpusb_ai_readcjcvalueName();
fxValue __declspec(dllexport) icpusb_ai_readcjcvalueDescription();
fxValue __declspec(dllexport) icpusb_ai_getchsamplerateName();
fxValue __declspec(dllexport) icpusb_ai_getchsamplerateDescription();
fxValue __declspec(dllexport) icpusb_ai_settypecodeName();
fxValue __declspec(dllexport) icpusb_ai_settypecodeDescription();
fxValue __declspec(dllexport) icpusb_ai_settypecodesName();
fxValue __declspec(dllexport) icpusb_ai_settypecodesDescription();
fxValue __declspec(dllexport) icpusb_ai_setchcjcoffsetName();
fxValue __declspec(dllexport) icpusb_ai_setchcjcoffsetDescription();
fxValue __declspec(dllexport) icpusb_ai_setchcjcoffsetsName();
fxValue __declspec(dllexport) icpusb_ai_setchcjcoffsetsDescription();
fxValue __declspec(dllexport) icpusb_ai_setchenableName();
fxValue __declspec(dllexport) icpusb_ai_setchenableDescription();
fxValue __declspec(dllexport) icpusb_ai_setfilterrejectionName();
fxValue __declspec(dllexport) icpusb_ai_setfilterrejectionDescription();
fxValue __declspec(dllexport) icpusb_ai_setcjcoffsetName();
fxValue __declspec(dllexport) icpusb_ai_setcjcoffsetDescription();
fxValue __declspec(dllexport) icpusb_ai_setcjcenableName();
fxValue __declspec(dllexport) icpusb_ai_setcjcenableDescription();
fxValue __declspec(dllexport) icpusb_ai_setwiredetectenableName();
fxValue __declspec(dllexport) icpusb_ai_setwiredetectenableDescription();
fxValue __declspec(dllexport) icpusb_ai_setchsamplerateName();
fxValue __declspec(dllexport) icpusb_ai_setchsamplerateDescription();
fxValue __declspec(dllexport) icpusb_ao_gettotalsupporttypeName();
fxValue __declspec(dllexport) icpusb_ao_gettotalsupporttypeDescription();
fxValue __declspec(dllexport) icpusb_ao_getsupporttypecodeName();
fxValue __declspec(dllexport) icpusb_ao_getsupporttypecodeDescription();
fxValue __declspec(dllexport) icpusb_ao_gettypecodeName();
fxValue __declspec(dllexport) icpusb_ao_gettypecodeDescription();
fxValue __declspec(dllexport) icpusb_ao_getchenableName();
fxValue __declspec(dllexport) icpusb_ao_getchenableDescription();
fxValue __declspec(dllexport) icpusb_ao_getresolutionName();
fxValue __declspec(dllexport) icpusb_ao_getresolutionDescription();
fxValue __declspec(dllexport) icpusb_ao_readexpvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_readexpvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_readexpvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_readexpvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_readcurvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_readcurvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_readcurvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_readcurvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_getpoweronenableName();
fxValue __declspec(dllexport) icpusb_ao_getpoweronenableDescription();
fxValue __declspec(dllexport) icpusb_ao_getsafetyenableName();
fxValue __declspec(dllexport) icpusb_ao_getsafetyenableDescription();
fxValue __declspec(dllexport) icpusb_ao_getpoweronvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_getpoweronvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_getpoweronvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_getpoweronvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_getsafetyvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_getsafetyvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_getsafetyvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_getsafetyvalueanalogDescription();
//fxValue __declspec(dllexport) icpusb_ao_getslewrateName();
//fxValue __declspec(dllexport) icpusb_ao_getslewrateDescription();
fxValue __declspec(dllexport) icpusb_ao_settypecodeName();
fxValue __declspec(dllexport) icpusb_ao_settypecodeDescription();
fxValue __declspec(dllexport) icpusb_ao_settypecodesName();
fxValue __declspec(dllexport) icpusb_ao_settypecodesDescription();
fxValue __declspec(dllexport) icpusb_ao_setchenableName();
fxValue __declspec(dllexport) icpusb_ao_setchenableDescription();
fxValue __declspec(dllexport) icpusb_ao_writechannelvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_writechannelvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_writevaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_writevaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_writechannelvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_writechannelvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_writevalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_writevalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_setpoweronenableName();
fxValue __declspec(dllexport) icpusb_ao_setpoweronenableDescription();
fxValue __declspec(dllexport) icpusb_ao_setsafetyenableName();
fxValue __declspec(dllexport) icpusb_ao_setsafetyenableDescription();
fxValue __declspec(dllexport) icpusb_ao_setpoweronvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_setpoweronvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_setpoweronchannelvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_setpoweronchannelvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_setpoweronvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_setpoweronvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_setpoweronchannelvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_setpoweronchannelvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_setsafetyvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_setsafetyvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_setsafetychannelvaluedigitalName();
fxValue __declspec(dllexport) icpusb_ao_setsafetychannelvaluedigitalDescription();
fxValue __declspec(dllexport) icpusb_ao_setsafetyvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_setsafetyvalueanalogDescription();
fxValue __declspec(dllexport) icpusb_ao_setsafetychannelvalueanalogName();
fxValue __declspec(dllexport) icpusb_ao_setsafetychannelvalueanalogDescription();
//fxValue __declspec(dllexport) icpusb_ao_setslewrateName();
//fxValue __declspec(dllexport) icpusb_ao_setslewrateDescription();
fxValue __declspec(dllexport) icpusb_pi_gettotalsupporttypeName();
fxValue __declspec(dllexport) icpusb_pi_gettotalsupporttypeDescription();
fxValue __declspec(dllexport) icpusb_pi_getsupporttypecodeName();
fxValue __declspec(dllexport) icpusb_pi_getsupporttypecodeDescription();
fxValue __declspec(dllexport) icpusb_pi_gettypecodeName();
fxValue __declspec(dllexport) icpusb_pi_gettypecodeDescription();
fxValue __declspec(dllexport) icpusb_pi_gettriggermodeName();
fxValue __declspec(dllexport) icpusb_pi_gettriggermodeDescription();
fxValue __declspec(dllexport) icpusb_pi_getchisolatedflagName();
fxValue __declspec(dllexport) icpusb_pi_getchisolatedflagDescription();
fxValue __declspec(dllexport) icpusb_pi_getlpfilterenableName();
fxValue __declspec(dllexport) icpusb_pi_getlpfilterenableDescription();
fxValue __declspec(dllexport) icpusb_pi_getlpfilterwidthName();
fxValue __declspec(dllexport) icpusb_pi_getlpfilterwidthDescription();
fxValue __declspec(dllexport) icpusb_pi_readvalueName();
fxValue __declspec(dllexport) icpusb_pi_readvalueDescription();
fxValue __declspec(dllexport) icpusb_pi_readcntvalueName();
fxValue __declspec(dllexport) icpusb_pi_readcntvalueDescription();
fxValue __declspec(dllexport) icpusb_pi_readfreqvalueName();
fxValue __declspec(dllexport) icpusb_pi_readfreqvalueDescription();
fxValue __declspec(dllexport) icpusb_pi_settypecodeName();
fxValue __declspec(dllexport) icpusb_pi_settypecodeDescription();
fxValue __declspec(dllexport) icpusb_pi_settypecodesName();
fxValue __declspec(dllexport) icpusb_pi_settypecodesDescription();
fxValue __declspec(dllexport) icpusb_pi_clearsinglechcountName();
fxValue __declspec(dllexport) icpusb_pi_clearsinglechcountDescription();
fxValue __declspec(dllexport) icpusb_pi_clearchcountName();
fxValue __declspec(dllexport) icpusb_pi_clearchcountDescription();
fxValue __declspec(dllexport) icpusb_pi_clearsinglechstatusName();
fxValue __declspec(dllexport) icpusb_pi_clearsinglechstatusDescription();
fxValue __declspec(dllexport) icpusb_pi_clearchstatusName();
fxValue __declspec(dllexport) icpusb_pi_clearchstatusDescription();
fxValue __declspec(dllexport) icpusb_pi_settriggermodeName();
fxValue __declspec(dllexport) icpusb_pi_settriggermodeDescription();
fxValue __declspec(dllexport) icpusb_pi_settriggermodesName();
fxValue __declspec(dllexport) icpusb_pi_settriggermodesDescription();
fxValue __declspec(dllexport) icpusb_pi_setchisolatedflagName();
fxValue __declspec(dllexport) icpusb_pi_setchisolatedflagDescription();
fxValue __declspec(dllexport) icpusb_pi_setchisolatedflagsName();
fxValue __declspec(dllexport) icpusb_pi_setchisolatedflagsDescription();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterenableName();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterenableDescription();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterenablesName();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterenablesDescription();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterwidthName();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterwidthDescription();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterwidthsName();
fxValue __declspec(dllexport) icpusb_pi_setlpfilterwidthsDescription();

fxValue __declspec(dllexport) icpcom_last_error(const fxValue& returnType);
fxValue __declspec(dllexport) icpcom_last_errorName();
fxValue __declspec(dllexport) icpcom_last_errorDescription();
fxValue __declspec(dllexport) icpcom_opendevice(const fxValue& connectionString);
fxValue __declspec(dllexport) icpcom_opendeviceName();
fxValue __declspec(dllexport) icpcom_opendeviceDescription();
fxValue __declspec(dllexport) icpcom_closedevice(const fxValue& handle);
fxValue __declspec(dllexport) icpcom_closedeviceName();
fxValue __declspec(dllexport) icpcom_closedeviceDescription();
fxValue __declspec(dllexport) icpcom_ai_read(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_ai_readName();
fxValue __declspec(dllexport) icpcom_ai_readDescription();
fxValue __declspec(dllexport) icpcom_ao_read(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_ao_readName();
fxValue __declspec(dllexport) icpcom_ao_readDescription();
fxValue __declspec(dllexport) icpcom_ao_write(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& chanelsNumber, const fxValue& value);
fxValue __declspec(dllexport) icpcom_ao_writeName();
fxValue __declspec(dllexport) icpcom_ao_writeDescription();

fxValue __declspec(dllexport) icpcom_rec_cmd_start();
fxValue __declspec(dllexport) icpcom_rec_cmd_startName();
fxValue __declspec(dllexport) icpcom_rec_cmd_startDescription();
fxValue __declspec(dllexport) icpcom_rec_cmd_stop();
fxValue __declspec(dllexport) icpcom_rec_cmd_stopName();
fxValue __declspec(dllexport) icpcom_rec_cmd_stopDescription();
fxValue __declspec(dllexport) icpcom_rec_cmd_exec(const fxValue& handle, const fxValue& data);
fxValue __declspec(dllexport) icpcom_rec_cmd_execName();
fxValue __declspec(dllexport) icpcom_rec_cmd_execDescription();

fxValue __declspec(dllexport) icpcom_sendcmd(const fxValue& handle, const fxValue& data);
fxValue __declspec(dllexport) icpcom_sendcmdName();
fxValue __declspec(dllexport) icpcom_sendcmdDescription();
fxValue __declspec(dllexport) icpcom_di_read(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_di_readName();
fxValue __declspec(dllexport) icpcom_di_readDescription();
fxValue __declspec(dllexport) icpcom_di_readchannel(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_di_readchannelName();
fxValue __declspec(dllexport) icpcom_di_readchannelDescription();
fxValue __declspec(dllexport) icpcom_do_read(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_do_readName();
fxValue __declspec(dllexport) icpcom_do_readDescription();
fxValue __declspec(dllexport) icpcom_do_write(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber, const fxValue& value);
fxValue __declspec(dllexport) icpcom_do_writeName();
fxValue __declspec(dllexport) icpcom_do_writeDescription();
fxValue __declspec(dllexport) icpcom_do_writechannelvalue(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& chanelsNumber, const fxValue& onOff);
fxValue __declspec(dllexport) icpcom_do_writechannelvalueName();
fxValue __declspec(dllexport) icpcom_do_writechannelvalueDescription();
fxValue __declspec(dllexport) icpcom_getwdtstatus(const fxValue& handle, const fxValue& address);
fxValue __declspec(dllexport) icpcom_getwdtstatusName();
fxValue __declspec(dllexport) icpcom_getwdtstatusDescription();
fxValue __declspec(dllexport) icpcom_getwdtconfig(const fxValue& handle, const fxValue& address);
fxValue __declspec(dllexport) icpcom_getwdtconfigName();
fxValue __declspec(dllexport) icpcom_getwdtconfigDescription();
fxValue __declspec(dllexport) icpcom_setwdtconfig(const fxValue& handle, const fxValue& address, const fxValue& sStatus, const fxValue& ulWDTtime, const fxValue& iOverwrite);
fxValue __declspec(dllexport) icpcom_setwdtconfigName();
fxValue __declspec(dllexport) icpcom_setwdtconfigDescription();
fxValue __declspec(dllexport) icpcom_resetwdt(const fxValue& handle, const fxValue& address);
fxValue __declspec(dllexport) icpcom_resetwdtName();
fxValue __declspec(dllexport) icpcom_resetwdtDescription();
fxValue __declspec(dllexport) icpcom_refreshwdt(const fxValue& handle, const fxValue& address);
fxValue __declspec(dllexport) icpcom_refreshwdtName();
fxValue __declspec(dllexport) icpcom_refreshwdtDescription();
fxValue __declspec(dllexport) icpcom_do_readpoweronvalue(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_do_readpoweronvalueName();
fxValue __declspec(dllexport) icpcom_do_readpoweronvalueDescription();
fxValue __declspec(dllexport) icpcom_do_writepoweronvalue(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber, const fxValue& value);
fxValue __declspec(dllexport) icpcom_do_writepoweronvalueName();
fxValue __declspec(dllexport) icpcom_do_writepoweronvalueDescription();
fxValue __declspec(dllexport) icpcom_ao_readpoweronvalue(const fxValue& handle, const fxValue& address, const fxValue& chanel, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_ao_readpoweronvalueName();
fxValue __declspec(dllexport) icpcom_ao_readpoweronvalueDescription();
fxValue __declspec(dllexport) icpcom_ao_writepoweronvalue(const fxValue& handle, const fxValue& address, const fxValue& chanel, const fxValue& chanelsNumber, const fxValue& value);
fxValue __declspec(dllexport) icpcom_ao_writepoweronvalueName();
fxValue __declspec(dllexport) icpcom_ao_writepoweronvalueDescription();
fxValue __declspec(dllexport) icpcom_do_readsafevalue(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_do_readsafevalueName();
fxValue __declspec(dllexport) icpcom_do_readsafevalueDescription();
fxValue __declspec(dllexport) icpcom_do_writesafevalue(const fxValue& handle, const fxValue& address, const fxValue& chanelsNumber, const fxValue& value);
fxValue __declspec(dllexport) icpcom_do_writesafevalueName();
fxValue __declspec(dllexport) icpcom_do_writesafevalueDescription();
fxValue __declspec(dllexport) icpcom_ao_readsafevalue(const fxValue& handle, const fxValue& address, const fxValue& chanel, const fxValue& chanelsNumber);
fxValue __declspec(dllexport) icpcom_ao_readsafevalueName();
fxValue __declspec(dllexport) icpcom_ao_readsafevalueDescription();
fxValue __declspec(dllexport) icpcom_ao_writesafevalue(const fxValue& handle, const fxValue& address, const fxValue& chanel, const fxValue& chanelsNumber, const fxValue& value);
fxValue __declspec(dllexport) icpcom_ao_writesafevalueName();
fxValue __declspec(dllexport) icpcom_ao_writesafevalueDescription();
//fxValue __declspec(dllexport) icpcom_buzzerbeep(const fxValue& count, const fxValue& milliseconds);
//fxValue __declspec(dllexport) icpcom_buzzerbeepName();
//fxValue __declspec(dllexport) icpcom_buzzerbeepDescription();
//fxValue __declspec(dllexport) icpcom_getbuzzerbeepfreqduty();
//fxValue __declspec(dllexport) icpcom_getbuzzerbeepfreqdutyName();
//fxValue __declspec(dllexport) icpcom_getbuzzerbeepfreqdutyDescription();
//fxValue __declspec(dllexport) icpcom_setbuzzerbeepfreqduty(const fxValue& freq, const fxValue& duty);
//fxValue __declspec(dllexport) icpcom_setbuzzerbeepfreqdutyName();
//fxValue __declspec(dllexport) icpcom_setbuzzerbeepfreqdutyDescription();
//fxValue __declspec(dllexport) icpcom_stopbuzzer();
//fxValue __declspec(dllexport) icpcom_stopbuzzerName();
//fxValue __declspec(dllexport) icpcom_stopbuzzerDescription();
fxValue __declspec(dllexport) icpcom_setpwmduty(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& duty);
fxValue __declspec(dllexport) icpcom_setpwmdutyName();
fxValue __declspec(dllexport) icpcom_setpwmdutyDescription();
fxValue __declspec(dllexport) icpcom_getpwmduty(const fxValue& handle, const fxValue& address, const fxValue& channel);
fxValue __declspec(dllexport) icpcom_getpwmdutyName();
fxValue __declspec(dllexport) icpcom_getpwmdutyDescription();
fxValue __declspec(dllexport) icpcom_setpwmfrequency(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& freq);
fxValue __declspec(dllexport) icpcom_setpwmfrequencyName();
fxValue __declspec(dllexport) icpcom_setpwmfrequencyDescription();
fxValue __declspec(dllexport) icpcom_getpwmfrequency(const fxValue& handle, const fxValue& address, const fxValue& channel);
fxValue __declspec(dllexport) icpcom_getpwmfrequencyName();
fxValue __declspec(dllexport) icpcom_getpwmfrequencyDescription();
fxValue __declspec(dllexport) icpcom_setpwmmode(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& mode);
fxValue __declspec(dllexport) icpcom_setpwmmodeName();
fxValue __declspec(dllexport) icpcom_setpwmmodeDescription();
fxValue __declspec(dllexport) icpcom_getpwmmode(const fxValue& handle, const fxValue& address, const fxValue& channel);
fxValue __declspec(dllexport) icpcom_getpwmmodeName();
fxValue __declspec(dllexport) icpcom_getpwmmodeDescription();
fxValue __declspec(dllexport) icpcom_setpwmtrigger(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& config);
fxValue __declspec(dllexport) icpcom_setpwmtriggerName();
fxValue __declspec(dllexport) icpcom_setpwmtriggerDescription();
fxValue __declspec(dllexport) icpcom_getpwmtrigger(const fxValue& handle, const fxValue& address, const fxValue& channel);
fxValue __declspec(dllexport) icpcom_getpwmtriggerName();
fxValue __declspec(dllexport) icpcom_getpwmtriggerDescription();
fxValue __declspec(dllexport) icpcom_setpwmstart(const fxValue& handle, const fxValue& address, const fxValue& enStatus);
fxValue __declspec(dllexport) icpcom_setpwmstartName();
fxValue __declspec(dllexport) icpcom_setpwmstartDescription();
fxValue __declspec(dllexport) icpcom_setpwmsynchannel(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& enStatus);
fxValue __declspec(dllexport) icpcom_setpwmsynchannelName();
fxValue __declspec(dllexport) icpcom_setpwmsynchannelDescription();
fxValue __declspec(dllexport) icpcom_getpwmsynchannel(const fxValue& handle, const fxValue& address, const fxValue& channel);
fxValue __declspec(dllexport) icpcom_getpwmsynchannelName();
fxValue __declspec(dllexport) icpcom_getpwmsynchannelDescription();
fxValue __declspec(dllexport) icpcom_syncpwmstart(const fxValue& handle, const fxValue& address, const fxValue& enStatus);
fxValue __declspec(dllexport) icpcom_syncpwmstartName();
fxValue __declspec(dllexport) icpcom_syncpwmstartDescription();
fxValue __declspec(dllexport) icpcom_savepwmconfig(const fxValue& handle, const fxValue& address);
fxValue __declspec(dllexport) icpcom_savepwmconfigName();
fxValue __declspec(dllexport) icpcom_savepwmconfigDescription();
fxValue __declspec(dllexport) icpcom_getpwmdiostatus(const fxValue& handle, const fxValue& address);
fxValue __declspec(dllexport) icpcom_getpwmdiostatusName();
fxValue __declspec(dllexport) icpcom_getpwmdiostatusDescription();
fxValue __declspec(dllexport) icpcom_setpwmpulsecount(const fxValue& handle, const fxValue& address, const fxValue& channel, const fxValue& cnt);
fxValue __declspec(dllexport) icpcom_setpwmpulsecountName();
fxValue __declspec(dllexport) icpcom_setpwmpulsecountDescription();
fxValue __declspec(dllexport) icpcom_getpwmpulsecount(const fxValue& handle, const fxValue& address, const fxValue& channel);
fxValue __declspec(dllexport) icpcom_getpwmpulsecountName();
fxValue __declspec(dllexport) icpcom_getpwmpulsecountDescription();


}
